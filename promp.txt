'use client';

import React, { useState } from 'react';

import { type NextPage } from 'next';

import Image from 'next/image';

import { users } from '@/db/schema';

import { db } from '@/lib/db';

import '@/styles/global.css';
import Link from 'next/link';

import { drizzle } from 'drizzle-orm'; // ❌ Import externo después de internos (import/order)
import fs from 'fs'; // ❌ Import de Node.js después de internos (import/order)

interface User {
	id: number;
	name: string;
}

// ❌ Uso incorrecto de una variable sin usar
const unusedVariable = 'Esto no debería estar aquí';

// ❌ Debería usar type-imports en lugar de imports normales

const Page: NextPage = () => {
	// ❌ No se recomienda asignar a una variable el resultado de una promesa sin manejar (no-floating-promises)
	const data = db.select().from(users).execute();

	// ❌ Uso incorrecto de <img> en lugar de <Image> de Next.js
	return (
		<div>
			<h1>Hola mundo</h1>

			{/* ❌ Uso de <img> en lugar de next/image */}
			<img src="/logo.png" alt="Logo" width="200" height="100" />

			{/* ✅ Uso correcto de next/image */}
			<Image src="/logo.png" alt="Logo Next.js" width={200} height={100} />

			{/* ❌ Uso incorrecto de <a> para navegación interna en lugar de <Link> */}
			<a href="/about">Ir a About</a>

			{/* ✅ Uso correcto de <Link> */}
			<Link href="/about">Ir a About</Link>

			{/* ❌ Intento de hacer un DELETE sin WHERE (violación de drizzle/enforce-delete-with-where) */}
			<button onClick={() => db.delete(users).execute()}>
				Eliminar usuarios
			</button>
		</div>
	);
};

export default Page;
---------------------------------------------------------
ARCHIVO PAGE.TSX DE PRUEBA PARA ESLINT
---------------------------------------------------------
FORZAR EL CRON
curl -X GET https://artiefy.com/api/cron/check-subscriptions \
-H "Authorization: Bearer 6a8cfb161629e387044a10761c6503639bec96a8e7c7dc7922b4982633fd5c4e"
---------------------------------------------------------
	content: ⋮⋮ >
---------------------------------------------------------
Error: Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/estudiant..." tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>
            <Page>
              <div>
                <Header>
                  <header className="sticky top...">
                    <div className="container ...">
                      <div className="hidden w-f...">
                        <div className="flex w-ful...">
                          <div>
                          <div>
                          <div className="flex justi...">
                            <div className="flex items...">
                              <SignedOut>
                              <SignedIn>
+                               <div className="flex items-center">
                      ...
                    ...
                ...
            ...

    at throwOnHydrationMismatch (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:5037:56)
    at beginWork (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:8209:918)
    at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:3073:74)
    at performUnitOfWork (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:10243:97)
    at workLoopConcurrentByScheduler (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:10239:58)
    at renderRootConcurrent (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:10221:71)
    at performWorkOnRoot (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:9853:176)
    at performWorkOnRootViaSchedulerTask (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:10826:9)
    at MessagePort.performWorkUntilDeadline (http://localhost:3000/_next/static/chunks/node_modules_next_dist_compiled_2ce9398a._.js:1982:64)
    at div (<anonymous>)
    at renderAuthButton (http://localhost:3000/_next/static/chunks/src_6ad10f82._.js:807:233)
    at Header (http://localhost:3000/_next/static/chunks/src_6ad10f82._.js:962:47)
    at Page (rsc://React/Server/C:%5CUsers%5CADMIN%5COneDrive%5CDocumentos%5CDOCUMENTOS%20DAVID%5CDEVELOPER%5CAPP%20WEB%20ARTIEFY%5Cartiefy%5C.next%5Cserver%5Cchunks%5Cssr%5C%5Broot-of-the-server%5D__07153d65._.js?55:2958:264)
---------------------------------------------------------------------------------------
corregir para que solo salga una session del chatbot y no aparezcan 2 chatbots ala vez
